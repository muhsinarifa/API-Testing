{
	"info": {
		"_postman_id": "c9ec2a0e-9b77-4f2c-882e-8467d5e586d2",
		"name": "Herokuapp",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "26878949"
	},
	"item": [
		{
			"name": "Get Booking Information",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": "{{baseURL}}/booking"
			},
			"response": []
		},
		{
			"name": "Adding Booking Details",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"pm.environment.set(\"id\",jsonData.bookingid)\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var firstName = pm.variables.replaceIn(\"{{$randomFirstName}}\")\r",
							"console.log(firstName)\r",
							"pm.environment.set(\"firstName\",firstName)\r",
							"\r",
							"var lastName = pm.variables.replaceIn(\"{{$randomLastName}}\")\r",
							"console.log(lastName)\r",
							"pm.environment.set(\"lastName\",lastName)\r",
							"\r",
							"var totalPrice = pm.variables.replaceIn(\"{{$randomInt}}\")\r",
							"console.log(totalPrice)\r",
							"pm.environment.set(\"totalPrice\",totalPrice)\r",
							"\r",
							"const moment = require(\"moment\")\r",
							"const today = moment()\r",
							"const today2 = moment()\r",
							"const today3 = moment()\r",
							"\r",
							"pm.environment.set(\"checkin\",today.add(5,'day').format(\"YYYY-MM-DD\"))\r",
							"pm.environment.set(\"checkout\",today2.subtract(6,'month').format(\"YYYY-MM-DD\"))\r",
							"// console.log(today.add(5,'day').format(\"YYYY-MM-DD\"))\r",
							"// console.log(today.add(5,'month').format(\"YYYY-MM-DD\"))\r",
							"// console.log(today3.add(5,'year').format(\"YYYY-MM-DD\"))\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\": \"{{firstName}}\",\r\n    \"lastname\": \"{{lastName}}\",\r\n    \"totalprice\": {{totalPrice}},\r\n    \"depositpaid\": true,\r\n    \"bookingdates\": {\r\n        \"checkin\": \"{{checkin}}\",\r\n        \"checkout\": \"{{checkout}}\"\r\n    },\r\n    \"additionalneeds\": \"lunch\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{baseURL}}/booking/"
			},
			"response": []
		},
		{
			"name": "Get Specific Booking Details",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var code = pm.response.code\r",
							"console.log(code)\r",
							"\r",
							"switch(code){\r",
							"    case 200:\r",
							"    var jsonData = pm.response.json()\r",
							"\r",
							"        pm.test(\"First Name Validation\", function(){\r",
							"            pm.expect(jsonData.firstname).to.eql(pm.environment.get(\"firstName\"))\r",
							"        })\r",
							"\r",
							"        pm.test(\"Last Name Validation\", function(){\r",
							"            pm.expect(jsonData.lastname).to.eql(pm.environment.get(\"lastName\"))\r",
							"        })\r",
							"\r",
							"        pm.test(\"Totalprice Validation\", function(){\r",
							"            pm.expect(jsonData.totalprice).to.eql(parseInt(pm.environment.get(\"totalPrice\")))\r",
							"        })\r",
							"\r",
							"        pm.test(\"Depositpaid Validation\", function(){\r",
							"            pm.expect(jsonData.depositpaid).to.eql(true)\r",
							"        })\r",
							"\r",
							"        pm.test(\"Checkin Validation\", function(){\r",
							"            pm.expect(jsonData.bookingdates.checkin).to.eql(pm.environment.get(\"checkin\"))\r",
							"        })\r",
							"\r",
							"        pm.test(\"Checkout Validation\",function(){\r",
							"            pm.expect(jsonData.bookingdates.checkout).to.eql(pm.environment.get(\"checkout\"))\r",
							"        })\r",
							"        pm.test(\"Additionalneeds Validation\", function(){\r",
							"            pm.expect(jsonData.additionalneeds).to.eql(\"lunch\")\r",
							"        })\r",
							"\r",
							"    break;\r",
							"\r",
							"    case 404:\r",
							"    pm.test(\"Not Found\")\r",
							"    break;\r",
							"\r",
							"    case 501:\r",
							"    pm.test(\"Not implemented\")\r",
							"    braek;\r",
							"\r",
							"    case 502:\r",
							"    pm.test(\"Bad gateway\")\r",
							"    braek;\r",
							"\r",
							"    case 503:\r",
							"    pm.test(\"Service unavailable\")\r",
							"    braek;\r",
							"\r",
							"    default:\r",
							"    pm.test(\"something went wrong....\")\r",
							"}\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": "{{baseURL}}/booking/{{id}}"
			},
			"response": []
		},
		{
			"name": "Add - Excel sheet",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"pm.environment.set(\"id\",jsonData.bookingid)\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\": \"{{firstName}}\",\r\n    \"lastname\": \"{{lastName}}\",\r\n    \"totalprice\": {{totalPrice}},\r\n    \"depositpaid\": true,\r\n    \"bookingdates\": {\r\n        \"checkin\": \"{{checkin}}\",\r\n        \"checkout\": \"{{checkout}}\"\r\n    },\r\n    \"additionalneeds\": \"Breakfast\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{baseURL}}/booking/"
			},
			"response": []
		},
		{
			"name": "Get - Excel Sheet",
			"request": {
				"method": "GET",
				"header": [],
				"url": "{{baseURL}}//booking/{{id}}"
			},
			"response": []
		},
		{
			"name": "Auth â€“ Create Token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"pm.environment.set(\"token\",jsonData.token)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"username\": \"admin\",\r\n\"password\": \"password123\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{baseURL}}/auth"
			},
			"response": []
		},
		{
			"name": "Update Booking Detail",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var firstName = pm.variables.replaceIn(\"{{$randomFirstName}}\")\r",
							"console.log(firstName)\r",
							"pm.environment.set(\"firstName\",firstName)\r",
							"\r",
							"var lastName = pm.variables.replaceIn(\"{{$randomLastName}}\")\r",
							"console.log(lastName)\r",
							"pm.environment.set(\"lastName\",lastName)\r",
							"\r",
							"var totalPrice = pm.variables.replaceIn(\"{{$randomInt}}\")\r",
							"console.log(totalPrice)\r",
							"pm.environment.set(\"totalPrice\",totalPrice)\r",
							"\r",
							"const moment = require(\"moment\")\r",
							"const today = moment()\r",
							"const today2 = moment()\r",
							"const today3 = moment()\r",
							"\r",
							"pm.environment.set(\"checkin\",today.add(5,'day').format(\"YYYY-MM-DD\"))\r",
							"pm.environment.set(\"checkout\",today2.subtract(6,'month').format(\"YYYY-MM-DD\"))\r",
							"// console.log(today.add(5,'day').format(\"YYYY-MM-DD\"))\r",
							"// console.log(today.add(5,'month').format(\"YYYY-MM-DD\"))\r",
							"// console.log(today3.add(5,'year').format(\"YYYY-MM-DD\"))\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"var code = pm.response.code\r",
							"console.log(code)\r",
							"\r",
							"switch(code){\r",
							"    case 200:\r",
							"    var jsonData = pm.response.json()\r",
							"\r",
							"        pm.test(\"First Name Validation\", function(){\r",
							"            pm.expect(jsonData.firstname).to.eql(pm.environment.get(\"firstName\"))\r",
							"        })\r",
							"\r",
							"        pm.test(\"Last Name Validation\", function(){\r",
							"            pm.expect(jsonData.lastname).to.eql(pm.environment.get(\"lastName\"))\r",
							"        })\r",
							"\r",
							"        pm.test(\"Totalprice Validation\", function(){\r",
							"            pm.expect(jsonData.totalprice).to.eql(parseInt(pm.environment.get(\"totalPrice\")))\r",
							"        })\r",
							"\r",
							"        pm.test(\"Depositpaid Validation\", function(){\r",
							"            pm.expect(jsonData.depositpaid).to.eql(true)\r",
							"        })\r",
							"\r",
							"        pm.test(\"Checkin Validation\", function(){\r",
							"            pm.expect(jsonData.bookingdates.checkin).to.eql(pm.environment.get(\"checkin\"))\r",
							"        })\r",
							"\r",
							"        pm.test(\"Checkout Validation\",function(){\r",
							"            pm.expect(jsonData.bookingdates.checkout).to.eql(pm.environment.get(\"checkout\"))\r",
							"        })\r",
							"        pm.test(\"Additionalneeds Validation\", function(){\r",
							"            pm.expect(jsonData.additionalneeds).to.eql(\"lunch\")\r",
							"        })\r",
							"\r",
							"    break;\r",
							"\r",
							"    case 404:\r",
							"    pm.test(\"Not Found\")\r",
							"    break;\r",
							"\r",
							"    case 501:\r",
							"    pm.test(\"Not implemented\")\r",
							"    braek;\r",
							"\r",
							"    case 502:\r",
							"    pm.test(\"Bad gateway\")\r",
							"    braek;\r",
							"\r",
							"    case 503:\r",
							"    pm.test(\"Service unavailable\")\r",
							"    braek;\r",
							"\r",
							"    default:\r",
							"    pm.test(\"something went wrong....\")\r",
							"}\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Cookie",
						"value": "token= {{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\": \"{{firstName}}\",\r\n    \"lastname\": \"{{lastName}}\",\r\n    \"totalprice\": {{totalPrice}},\r\n    \"depositpaid\": true,\r\n    \"bookingdates\": {\r\n        \"checkin\": \"{{checkin}}\",\r\n        \"checkout\": \"{{checkout}}\"\r\n    },\r\n    \"additionalneeds\": \"lunch\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{baseURL}}/booking/{{id}}"
			},
			"response": []
		},
		{
			"name": "Delete Booking Information",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Cookie",
						"value": "token={{token}}",
						"type": "text"
					}
				],
				"url": "{{baseURL}}/booking/{{id}}"
			},
			"response": []
		}
	]
}